How did viewing a diff between two versions of a file
help you see the bug that was introduced?

there were differences in what each program could do
but most of the variables used were the same, making it 
easy to spot a bug.


How could having easy access to the entire history of a
file make you a more efficient programmer in the long term?

First, should any bug arise in a recent version, looking at 
an older version could solve the problem. Also, keeping older
versions, helps judge progress on a task.


What do you think are the pros and cons of manually choosing 
when to create a commit, like you do in Git, vs having versions
automatically saved, like Google Docs does?

Choosing when a commit is made usually means there's been a
significant and coherent change in the document. Automatic commits
don't always produce such results.


Why do you think some version control systems, like Git, allow
saving multiple files in one commit, while others, like Google Docs,
treat each file separately?

Git is meant for developers who normally work on projects
containing multiple files that need to be worked on. Google 
Docs is used for 'lighter' work, where files are truly separate,
with no relationship between them.


How can you use the commands git log and git diff to view the
history of files?

git log displays all commits with their unique ids, time of commit,
and log message.
git diff shows what has been added and removed in a recent file. 


How might using version control make you more confident to 
make changes that could break something?

I would know that I could always roll back to previous versions


Now that you have your workspace set up, what do you want 
to try using git for?

First, practice what I've just learned. Then quickly apply
version control to all my projects.
to fix bugs.